# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I carried out analytics on the data using SQL. 

#Creating the table step: 

CREATE TABLE Practice101.Spotifydata (
id INTEGER PRIMARY KEY,
artist_name VARCHAR NOT NULL,
track_name VARCHAR NOT NULL,
track_id VARCHAR NOT NULL,
popularity INTEGER NOT NULL,
danceability DECIMAL(4,3) NOT NULL,
energy DECIMAL(4,3) NOT NULL,
key INTEGER NOT NULL,
loudness DECIMAL(5,3) NOT NULL,
mode INTEGER NOT NULL,
speechiness DECIMAL(5,4) NOT NULL,
acousticness DECIMAL(6,5) NOT NULL,
instrumentalness TEXT NOT NULL,
liveness DECIMAL(5,4) NOT NULL,
valence DECIMAL(4,3) NOT NULL,
tempo DECIMAL(6,3) NOT NULL,
duration_ms INTEGER NOT NULL,
time_signature INTEGER NOT NULL 
)

#After that I inserted the Spotify Data .csv into the table.

#Next, I answered some questions related to the data using the following SQL. 

# First I explored which are top four songs track scored the highest danceability levels:
SELECT track_name, danceability 
FROM Practice101.Spotifydata
ORDER BY danceability DESC

LIMIT 4;

# Then I determined the avg popularity, danceability, and energy by artist and track. 
SELECT artist_name ,track_name
,AVG(popularity)
,AVG(danceability)
,AVG(energy)
FROM Practice101.spotifydata
GROUP BY artist_name, track_name

# After that I determined who the Top 10 artists are by popularity
SELECT track_name, artist_name, popularity
FROM Practice101.spotifydata
ORDER BY popularity DESC 
LIMIT 10

# Fourth I calculated the average popularity for the artists in the Spotify data table. 
Then, for every artist with an average popularity of 90 or above, I showed their name, their average popularity, and lable them as a "Top Star"

# Using Common Table Expressions
WITH popularity_average_CTE AS (SELECT s.artist_name, AVG(s.popularity) AS Average_Popularity FROM SpotifyData s GROUP BY s.artist_name)
  SELECT artist_name, Average_Popularity, 'Top Star' AS Tag FROM popularity_average_CTE 
  WHERE Average_Popularity>=90;
